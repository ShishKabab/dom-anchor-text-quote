{"version":3,"sources":["dom-anchor-text-quote.js"],"names":["global","factory","define","amd","exports","module","require","mod","DiffMatchPatch","TextPositionAnchor","seek","domAnchorTextQuote","this","_diffMatchPatch","_domAnchorTextPosition","_domSeek","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_DiffMatchPatch","_TextPositionAnchor","TextQuoteAnchor","exact","context","arguments","undefined","Error","prefix","suffix","value","toPositionAnchor","toRange","selector","type","root","document","body","dmp","Match_Distance","textContent","foldSlices","acc","slice","result","match_main","loc","start","Math","min","end","max","slices","match","_result","firstSlice","shift","reduce","range","position","fromRange","fromPositionAnchor","anchor","substr","prefixStart","suffixEnd"],"mappings":"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","file":"dom-anchor-text-quote.min.js","sourcesContent":["import DiffMatchPatch from 'diff-match-patch';\nimport TextPositionAnchor from 'dom-anchor-text-position'\nimport seek from 'dom-seek'\n\n\nexport default class TextQuoteAnchor {\n  constructor(exact, context = {}) {\n    if (exact === undefined) {\n      throw new Error('missing required parameter \"exact\"');\n    }\n    this.exact = exact;\n    this.prefix = context.prefix;\n    this.suffix = context.suffix;\n  }\n\n  static fromRange(range) {\n    if (range === undefined) {\n      throw new Error('missing required parameter \"range\"');\n    }\n\n    let position = TextPositionAnchor.fromRange(range);\n    return this.fromPositionAnchor(position);\n  }\n\n  static fromSelector(selector) {\n    if (selector === undefined) {\n      throw new Error('missing required parameter \"selector\"');\n    }\n    let {exact, prefix, suffix} = selector;\n    return new TextQuoteAnchor(exact, {prefix, suffix});\n  }\n\n  static fromPositionAnchor(anchor) {\n    let root = global.document.body;\n\n    let {start, end} = anchor;\n    let exact = root.textContent.substr(start, end - start);\n\n    let prefixStart = Math.max(0, start - 32);\n    let prefix = root.textContent.substr(prefixStart, start - prefixStart);\n\n    let suffixEnd = Math.min(root.textContent.length, end + 32);\n    let suffix = root.textContent.substr(end, suffixEnd - end);\n\n    return new TextQuoteAnchor(exact, {prefix, suffix});\n  }\n\n  toRange() {\n    return this.toPositionAnchor().toRange();\n  }\n\n  toSelector() {\n    let selector = {\n      type: 'TextQuoteSelector',\n      exact: this.exact,\n    };\n    if (this.prefix !== undefined) selector.prefix = this.prefix;\n    if (this.suffix !== undefined) selector.suffix = this.suffix;\n    return selector;\n  }\n\n  toPositionAnchor() {\n    let root = global.document.body;\n    let dmp = new DiffMatchPatch();\n\n    dmp.Match_Distance = root.textContent.length * 2;\n\n    let foldSlices = (acc, slice) => {\n      let result = dmp.match_main(root.textContent, slice, acc.loc);\n      if (result === -1) {\n        throw new Error('no match found');\n      }\n      acc.loc = result + slice.length;\n      acc.start = Math.min(acc.start, result);\n      acc.end = Math.max(acc.end, result + slice.length);\n      return acc;\n    };\n\n    let slices = this.exact.match(/(.|[\\r\\n]){1,32}/g);\n    let loc = root.textContent.length / 2;\n    let start = -1;\n    let end = -1;\n\n    if (this.prefix !== undefined) {\n      let result = dmp.match_main(root.textContent, this.prefix, loc);\n      if (result > -1) loc = end = start = result + this.prefix.length;\n    }\n\n    if (start === -1) {\n      let firstSlice = slices.shift();\n      result = dmp.match_main(root.textContent, firstSlice, loc);\n      if (result > -1) {\n        start = result;\n        loc = end = start + firstSlice.length;\n      } else {\n        throw new Error('no match found');\n      }\n    }\n\n    dmp.Match_Distance = 64;\n    let acc = slices.reduce(foldSlices, {\n      start: start,\n      end: end,\n      loc: loc,\n    });\n\n    return new TextPositionAnchor(acc.start, acc.end);\n  }\n}\n"],"sourceRoot":"./"}