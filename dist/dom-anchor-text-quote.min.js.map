{"version":3,"sources":["dom-anchor-text-quote.js"],"names":["global","factory","define","amd","exports","module","require","mod","DiffMatchPatch","TextPositionAnchor","seek","domAnchorTextQuote","this","_diffMatchPatch","_domAnchorTextPosition","_domSeek","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_DiffMatchPatch","_TextPositionAnchor","TextQuoteAnchor","root","exact","context","arguments","undefined","Error","prefix","suffix","value","toPositionAnchor","toRange","selector","type","dmp","Match_Distance","textContent","foldSlices","acc","slice","result","match_main","loc","start","Math","min","end","max","slices","match","firstSlice","shift","reduce","range","position","fromRange","fromPositionAnchor","anchor","substr","prefixStart","suffixEnd"],"mappings":"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","file":"dom-anchor-text-quote.min.js","sourcesContent":["import DiffMatchPatch from 'diff-match-patch';\nimport TextPositionAnchor from 'dom-anchor-text-position'\nimport seek from 'dom-seek'\n\n\nexport default class TextQuoteAnchor {\n  constructor(root, exact, context = {}) {\n    if (root === undefined) {\n      throw new Error('missing required parameter \"root\"');\n    }\n    if (exact === undefined) {\n      throw new Error('missing required parameter \"exact\"');\n    }\n    this.root = root;\n    this.exact = exact;\n    this.prefix = context.prefix;\n    this.suffix = context.suffix;\n  }\n\n  static fromRange(root, range) {\n    if (range === undefined) {\n      throw new Error('missing required parameter \"range\"');\n    }\n\n    let position = TextPositionAnchor.fromRange(root, range);\n    return this.fromPositionAnchor(position);\n  }\n\n  static fromSelector(root, selector = {}) {\n    return new TextQuoteAnchor(root, selector.exact, selector);\n  }\n\n  static fromPositionAnchor(anchor) {\n    let root = anchor.root;\n\n    let {start, end} = anchor;\n    let exact = root.textContent.substr(start, end - start);\n\n    let prefixStart = Math.max(0, start - 32);\n    let prefix = root.textContent.substr(prefixStart, start - prefixStart);\n\n    let suffixEnd = Math.min(root.textContent.length, end + 32);\n    let suffix = root.textContent.substr(end, suffixEnd - end);\n\n    return new TextQuoteAnchor(root, exact, {prefix, suffix});\n  }\n\n  toRange() {\n    return this.toPositionAnchor().toRange();\n  }\n\n  toSelector() {\n    let selector = {\n      type: 'TextQuoteSelector',\n      exact: this.exact,\n    };\n    if (this.prefix !== undefined) selector.prefix = this.prefix;\n    if (this.suffix !== undefined) selector.suffix = this.suffix;\n    return selector;\n  }\n\n  toPositionAnchor() {\n    let root = this.root;\n    let dmp = new DiffMatchPatch();\n\n    dmp.Match_Distance = root.textContent.length * 2;\n\n    let foldSlices = (acc, slice) => {\n      let result = dmp.match_main(root.textContent, slice, acc.loc);\n      if (result === -1) {\n        throw new Error('no match found');\n      }\n      acc.loc = result + slice.length;\n      acc.start = Math.min(acc.start, result);\n      acc.end = Math.max(acc.end, result + slice.length);\n      return acc;\n    };\n\n    let slices = this.exact.match(/(.|[\\r\\n]){1,32}/g);\n    let loc = (root.textContent.length / 2) | 0;\n    let start = -1;\n    let end = -1;\n\n    if (this.prefix !== undefined) {\n      let result = dmp.match_main(root.textContent, this.prefix, loc);\n      if (result > -1) loc = end = start = result + this.prefix.length;\n    }\n\n    if (start === -1) {\n      let firstSlice = slices.shift();\n      let result = dmp.match_main(root.textContent, firstSlice, loc);\n      if (result > -1) {\n        start = result;\n        loc = end = start + firstSlice.length;\n      } else {\n        throw new Error('no match found');\n      }\n    }\n\n    dmp.Match_Distance = 64;\n    let acc = slices.reduce(foldSlices, {\n      start: start,\n      end: end,\n      loc: loc,\n    });\n\n    return new TextPositionAnchor(root, acc.start, acc.end);\n  }\n}\n"],"sourceRoot":"./"}